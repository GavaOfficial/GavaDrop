name: Create Release

on:
  push:
    tags:
      - 'v*'

env:
  APP_VERSION: "0.9.5"

jobs:
  build:
    name: Build Release Artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Build Next.js Application
      run: npm run build

    - name: Build Desktop App
      run: npm run build:desktop

    - name: Upload Web Build Artifact
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: GavaDrop-Web-Build-${{ github.ref_name }}
        path: out/
        if-no-files-found: error
        compression-level: 6
        retention-days: 90

    - name: Upload Desktop App Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GavaDrop-Desktop-${{ matrix.platform }}-${{ github.ref_name }}
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.dmg
          dist/*.exe
          dist/*.zip
        if-no-files-found: error
        compression-level: 6
        retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Extract Version from Tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Extract Changelog
      id: changelog
      run: |
        if [ -f "UPDATE.md" ]; then
          # Extract changelog for this version from UPDATE.md
          CHANGELOG=$(sed -n "/^## \[${VERSION}\]/,/^## \[/p" UPDATE.md | sed '$d' | tail -n +2)
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="Release ${VERSION} - See UPDATE.md for details"
          fi
        else
          CHANGELOG="Release ${VERSION}"
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts/

    - name: Prepare Release Assets
      run: |
        mkdir -p release-assets
        
        # Web build
        if [ -d "release-artifacts/GavaDrop-Web-Build-${{ env.TAG_NAME }}" ]; then
          cd release-artifacts/GavaDrop-Web-Build-${{ env.TAG_NAME }}
          zip -r ../../release-assets/GavaDrop-Web-${{ env.VERSION }}.zip .
          cd ../..
        fi
        
        # Desktop apps
        for platform in linux macos windows; do
          artifact_dir="release-artifacts/GavaDrop-Desktop-${platform}-${{ env.TAG_NAME }}"
          if [ -d "$artifact_dir" ]; then
            cp -r "$artifact_dir"/* release-assets/ 2>/dev/null || true
          fi
        done
        
        # List all release assets
        echo "Release assets:"
        ls -la release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: GavaDrop ${{ env.VERSION }}
        body: |
          # ðŸš€ GavaDrop ${{ env.VERSION }}
          
          Modern peer-to-peer file sharing application with WebRTC, real-time chat, and end-to-end encryption for local networks.
          
          ## ðŸ“‹ Changelog
          
          ${{ env.CHANGELOG }}
          
          ## ðŸ“¦ Downloads
          
          ### Desktop Applications
          - **Windows**: Download the `.exe` installer for Windows systems
          - **macOS**: Download the `.dmg` installer for macOS systems  
          - **Linux**: Download the `.AppImage` for universal Linux support or `.deb` for Debian-based distributions
          
          ### Web Application
          - **Web Build**: Download the web version to host on your own server
          
          ## ðŸ”§ Installation
          
          ### Desktop App
          1. Download the appropriate installer for your operating system
          2. Run the installer and follow the setup wizard
          3. Launch GavaDrop from your applications menu
          
          ### Web Version
          1. Download the web build archive
          2. Extract and serve the files using a web server
          3. Start the signaling server: `node server.js`
          4. Access the application through your browser
          
          ## ðŸ“š Documentation
          
          For complete documentation, installation instructions, and usage guides, visit the [GitHub repository](https://github.com/GavaOfficial/GavaDrop).
          
          ---
          
          **Full Changelog**: https://github.com/GavaOfficial/GavaDrop/blob/main/UPDATE.md
        files: release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Release Summary
      run: |
        echo "## ðŸŽ‰ Release Created Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status | Download |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|---------|----------|" >> $GITHUB_STEP_SUMMARY
        echo "| Release Tag | âœ… Created | ${{ env.TAG_NAME }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Version | âœ… Extracted | ${{ env.VERSION }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Desktop Apps | âœ… Built | Linux, macOS, Windows |" >> $GITHUB_STEP_SUMMARY
        echo "| Web Build | âœ… Built | ZIP Archive |" >> $GITHUB_STEP_SUMMARY
        echo "| GitHub Release | âœ… Published | [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG_NAME }}) |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Release URL:** https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG_NAME }}" >> $GITHUB_STEP_SUMMARY